@startuml

title __GAME's Class Diagram__\n

  namespace Game {
    class Game.Account {
        - balance : int
        - startBalance : int
        + Account()
        + getBalance()
        + newBalance()
        + setBalance()
    }
  }


  namespace Game {
    class Game.Board {
        - boardSize : int
        - fieldDatabase : String
        - myFields : Field[]
        + Board()
        + generateBoard()
        + getMyFields()
        - loadFromTXT()
    }
  }


  namespace Game {
    class Game.Chancekort {
        + DrawRandomChanceCard()
        + chancekorthandling()
    }
  }


  namespace Game {
    enum ChancekortTypes {
      DoneAlleHomework
      Give2ToBank
      Move5Forward
      MoveToPear
      MoveToSkatepark
      MoveToStart
    }
  }


  namespace Game {
    class Game.Die {
        - faceAmount : int
        - value : int
        + Die()
        + getFaceAmount()
        + getValue()
        + roll()
        + setFaceAmount()
        + setValue()
        + toString()
    }
  }


  namespace Game {
    class Game.Field {
        - color : String
        - fieldPosition : int[]
        - name : String
        - pairProperty : int
        - price : int
        + Field()
        + getColor()
        + getFieldPosition()
        + getName()
        + getOwner()
        + getPairProperty()
        + getPrice()
        + getfType()
        + setFieldPosition()
        + setOwner()
        + toString()
    }
  }


  namespace Game {
    enum fieldType {
      CHANCE
      FREEPARKING
      GOJAIL
      JAIL
      PROPERTY
      START
    }
  }


  namespace Game {
    class Game.GameHandler {
        + GameHandler()
        + generateplayers()
        {static} + landonfield()
        + startGame()
        + turn()
    }
  }


  namespace Game {
    class Game.Main {
        {static} + main()
    }
  }


  namespace Game {
    class Game.Player {
        {static} - counter : int
        - isjailed : boolean
        - name : String
        - playerNumber : int
        - position : int
        - soldSigns : int
        + Player()
        + getAc()
        + getName()
        + getPlayerNumber()
        + getPlayernumber()
        + getPosition()
        + getSoldSigns()
        + isIsjailed()
        + move()
        + setIsjailed()
        + setName()
        + setPlayerNumber()
        + setPlayernumber()
        + setPosition()
        + setSoldSigns()
        + toString()
    }
  }


  namespace Game {
    class Game.Rafflecup {
        - cup : Die[]
        + Rafflecup()
        + configure()
        + getCup()
        + roll()
        + rollar()
        + sum()
    }
  }


  namespace Game {
    class Game.Settings {
        {static} + BOARD_SIZE : int
        {static} + DIE_FACES : int
        {static} + DIE_NUMBER : int
        {static} + FIELD_DATABASE : String
        {static} + GO_RESTROOM_MONEY : int
        {static} + GO_SPOT_MONEY : int
        {static} + MAX_PLAYERS : int
        {static} + MIN_PLAYERS : int
        {static} + PAY_SPOT_MONEY : int
        {static} + SOLD_SIGNS : int
        {static} + STARTING_MONEY : int
        {static} + WINDOW_HEIGHT : int
        {static} + WINDOW_WIDTH : int
        - Settings()
    }
  }


  namespace Game {
    class Game.TXTReader {
        - txtToLoad : String
        + TXTReader()
        + readTXTFile()
        {static} + udskrift()
    }
  }


  namespace Game {
    class Game.playermoney {
        {static} + playerloser()
        + playermoney()
        {static} + playerwin()
    }
  }


  namespace Game {
    class Game.testmain {
        {static} + generateplayers()
        {static} + main()
        {static} + turn()
    }
  }


  Game.Chancekort +-down- Game.Chancekort.ChancekortTypes
  Game.Field o-- Game.Field.fieldType : fType
  Game.Field o-- Game.Player : owner
  Game.Field +-down- Game.Field.fieldType
  Game.Player o-- Game.Account : playerAccount


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
